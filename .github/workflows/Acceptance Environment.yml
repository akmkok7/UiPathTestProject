name: Acceptance Environment
on:
  push:
    branches: main
    paths:
      - 'project.json'
      - 'Main.xaml'

jobs:
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Runner workspace path
        run: |
          echo "Cleaning up previous run"
          rm -rf "${{ github.workspace }}"
  build-uipath-nuget-package:
    # You should be able to run on windows 2019 or windows latest
    needs: cleanup
    runs-on: windows-latest
    steps: 
      - name: Check out repository code
        # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
        uses: actions/checkout@v4
      - name: Build Nuget Package
        uses: akmkok7/Arun-RPA-UiPath-Pack@v1.1.0
      - name: Upload UiPath Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: |
           package/*.*
           
  publish-uipath-nuget-package-ACC:
    needs: build-uipath-nuget-package
    runs-on: windows-latest
    # Here the environment variable is declared in workflow level
    env:
      # Replace with your Orchestrator Values 
      ORCH_URL: https://cloud.uipath.com/
      #ORCH_TENANT: DefaultTenant
      ORCH_TENANT: Development
      ORCH_AppAccount: arunkmk
      ORCH_AppID: ${{ secrets.APPID }}
      ORCH_AppSecret: ${{ secrets.APPSECRET }}
      ORCH_FolderName: ${{ vars.FOLDERNAME_ACC }}
      ORCH_CreateProcess: ${{ vars.CREATEPROCESS_ACC }}
    steps: 
      - name: Download UiPath Artifacts
        uses: actions/download-artifact@v4
        with:
          name: Artifacts
          path: package
      - name: Publish Nuget Package to ACC
        uses: akmkok7/Arun-RPA-UiPath-Deploy@v1.0.0
        with:
          packagesPath: ${{ github.workspace }}\package
          orchestratorTenant: Development
          orchestratorAppAccount: arunkmk
          orchestratorApplicationId: ${{ env.ORCH_AppID }}
          orchestratorApplicationSecret: ${{ env.ORCH_AppSecret }}
          orchestratorFolder: ${{ env.ORCH_FolderName }}
          orchestratorCreateProcess: ${{ env.ORCH_CreateProcess }}
